global proc zhairRemoveMenus()
{
    global string $gMainWindow;
    if ($gMainWindow != "") {
        global string $gRenderingMenus[];
        int $menuIndex = -1;
        int $menuSize = `size $gRenderingMenus`;
        setParent $gMainWindow;

        // iterate through the Rendering menu to find the zhair menu.
        for ($i = 0; $i < $menuSize; $i++) {
            string $m = `match "zTools" $gRenderingMenus[$i]`;
            if ( $m != "" ) {
                $menuIndex = $i;
                break;
            }
        }
       
        // if not found, create it.
        if ($menuIndex == -1) {
            $gRenderingMenus[$menuSize] = `menu -l "*zTools" -aob true -to true zTools`;
        }
       
        // if zhair menu exists, delete it first.
        else {
            if(`menuItem -exists zhairItems` ) deleteUI zhairItems;
        }
    }
}

global proc zhairCreateMenus()
{
    global string $gMainWindow;
    if ($gMainWindow != "") {
        global string $gRenderingMenus[];
        int $menuIndex = -1;
        int $menuSize = `size $gRenderingMenus`;
        setParent $gMainWindow;

        // iterate through the Rendering menu to find the zhair menu.
        for ($i = 0; $i < $menuSize; $i++) {
            string $m = `match "zTools" $gRenderingMenus[$i]`;
            if ( $m != "" ) {
                $menuIndex = $i;
                break;
            }
        }
       
        // if not found, create it.
        if ($menuIndex == -1) {
            $gRenderingMenus[$menuSize] = `menu -l "*zTools" -aob true -to true zTools`;
        }
       
        // if zhair menu exists, seach the menu item.
        else {
            if(`menuItem -exists zhairItems` ) deleteUI zhairItems;
        }
       
        // append menu items
        menuItem -p zTools -l "Z Hair" -subMenu true zhairItems;
			menuItem -l "Create Guider Curve" -c "zhair_do_create_guider";
			menuItem -l "Strand Guider Curve" -c "zhair_do_strand_guider";
			menuItem -l "Create Curve Options" -subMenu true zhair_guideroptions;
				menuItem -l "5" -c "zhair_open_setcreateguideroptwin" zhair_guideroption_ns;
				menuItem -l "1.0" -c "zhair_open_setcreateguideroptwin" zhair_guideroption_sl;
				menuItem -l "3" -c "zhair_open_setcreateguideroptwin" zhair_guideroption_strandCount;
				menuItem -l "1.0" -c "zhair_open_setcreateguideroptwin" zhair_guideroption_strandDist;
			setParent -menu ..;
			menuItem -divider true;
			menuItem -l "Comb Curve Tool" -c "zhair_comb";
			menuItem -divider true;
			menuItem -l "Create Guider Mesh" -c "zhair_do_mesh_guider";
			menuItem -l "Attach to Body" -c "zhair_attach_deformer_win";
			menuItem -l "Recover Guider Curve" -c "ZHairGuider -cp 1";
			menuItem -divider true;
			menuItem -l "Modify Dynamic" -c "zhair_mod_dyn";
			menuItem -divider true;
            menuItem -l "Create Hair" -c "zhair_attach";
			menuItem -l "Modify Selected Hair" -c "open_zhair_modifywin";
			menuItem -divider true;
            menuItem -l "Save Cache" -c "openSaveHairMapWin";
			menuItem -l "Load Cache" -c "openLoadHairMapWin";
            menuItem -divider true;
			menuItem -l "Existing Hairs" -subMenu true -postMenuCommand zhair_findexisting zhair_existinghairs;
			setParent -menu ..;
		setParent -menu ..;
    }
}

global proc zhair_do_mesh_guider()
{
	string $sel[] = `ls -sl`;
	if(size($sel) < 2) 
	{
		print("Select curve(s) and a poly meshe to create guider mesh!");
		return;
	}
	
	string $map;
	
	int $numsel = size($sel);
	int $i;
	int $acc=0;
	for($i=0; $i<$numsel-1; $i++)
	{
		if($acc ==0)
		{
			$map =`createNode Curve2Patch`;
	
			select -r $sel[$numsel-1];
			string $mesh[] = `pickWalk -d down`;
			connectAttr -f ($mesh[0]+".outMesh") ($map+".growMesh");
			
			string $cub[] = `polyCube -ch 0`;
			select -r $cub[0];
			$cub = `pickWalk -d down`;
			connectAttr -f ($map+".outMesh") ($cub[0] + ".inMesh");
		}
		
		select -r $sel[$i];
		string $curve[] = `pickWalk -d down`;
		connectAttr -f ($curve[0]+".worldSpace[0]") ($map+".guideMesh["+$acc+"]");
		
		$acc++;
		if($acc==1) $acc =0;
	}
}

global proc zhair_attach()
{
	string $sel[] = `ls -sl`;
	if(size($sel) < 2) 
	{
		print("Select 2 or more poly meshes to create z hair!");
		return;
	}
	
	string $map =`createNode ZHairViz`;
	
	int $numsel = size($sel);
	int $i;
	for($i=0; $i<$numsel-1; $i++)
	{
		select -r $sel[$i];
		string $mesh[] = `pickWalk -d down`;
		connectAttr -f ($mesh[0]+".outMesh") ($map+".guideMesh["+$i+"]");
	}
	
	select -r $sel[$numsel-1];
	$mesh = `pickWalk -d down`;
	connectAttr -f ($mesh[0]+".outMesh") ($map+".growMesh");
	
	string $dummy = `createNode -n "dummy" transform`;
	connectAttr -f ($map + ".outval") ($dummy+".translateX");
	
	connectAttr -f "time1.outTime" ($map + ".currentTime");
	
	setAttr ($map + ".startFrame") `playbackOptions -q -min`;
	
	zhair_findexisting();
}

global proc zhair_findexisting()
{
	string $existing[] = `ls -type ZHairViz`;
	string $an;
	for($an in $existing) 
	{
		string $mnu = $an+"_mnu";
		if(`menuItem -exists $mnu` ) deleteUI $mnu;
		menuItem -l $an -c ("select -tgl "+$an) -p zhair_existinghairs $mnu;
	}
}

global proc zhair_do_create_guider()
{
	string $cmd = "ZHairGuider -cc 1 -ns " + `menuItem -q -l zhair_guideroption_ns` + " -sl " + `menuItem -q -l zhair_guideroption_sl`;
	eval($cmd);
}

global proc zhair_do_strand_guider()
{
	pickWalk -d down;
	string $cmd = "ZHairGuider -sc 1 -sct " + `menuItem -q -l zhair_guideroption_strandCount` + " -sd " + `menuItem -q -l zhair_guideroption_strandDist`;
	eval($cmd);
}

global proc openSaveHairMapWin()
{
//If such a window already exists, destory it.
 if ( (`window -exists savezhairWin`) == true ) deleteUI savezhairWin;
 
//Create the window.
 window -title "Save Hair Map Options" -wh 400 300  -mb false savezhairWin;

//Layout
string $form = `formLayout -numberOfDivisions 100`;
string $row = `rowLayout -numberOfColumns 3 -columnWidth3 120 120 120 -columnAttach 1 "both" 0 -columnAttach 2 "both" 0 -columnAttach 3 "both" 0`;
string $scroll = `scrollLayout -p $form`;

columnLayout -adjustableColumn true;

//column begin
	textFieldButtonGrp
     -cw 1 110 -label "Cache Path" -buttonLabel "Pick"
	 -bc "fileBrowser \"set_hairCacheDataPath\" \"Set Path\" \"\" 4"
     savezhairCachePathGrp;
    
	text -al left -l "\nDescription: save cache on any hair node from playback start to end.\nWill save to /data of current project if path is not set.";

//row begin
button -l "Save" -c "doSavezhair;deleteUI savezhairWin"-p $row;
button -l "Apply" -c "doSavezhair" -p $row;
button -l "Close" -c "deleteUI savezhairWin" -p $row;

formLayout -edit
        -attachNone  $row     "top"
        -attachForm     $row     "left"   2
        -attachForm    $row     "bottom" 2
        -attachForm     $row     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $row
        -attachForm     $scroll "right"  2
    $form;

showWindow savezhairWin;
}

global proc doSavezhair()
{
	string $node[] = `ls -type ZHairViz`;
	string $an;
	for($an in $node)
	{
		setAttr -type "string" ($an + ".cachePath") `textFieldButtonGrp -q -text savezhairCachePathGrp`;
		setAttr ($an + ".saveMap") 1;
	}

	int $amount = 0;
	progressWindow -title "Writing Hair" -progress $amount -status "Completed: 0%" -isInterruptable true;

	int $s = `playbackOptions -q -min`;
	int $e = `playbackOptions -q -max`;
	int $step = 1;

	int $i;
	for( $i = $s; $i <= $e; $i++ ) 
	{
		currentTime $i;
		$amount = ($i+1-$s)/(1.0*($e+1-$s))*100;

		// Check if the dialog has been cancelled
		if ( `progressWindow -query -isCancelled` ) break; 
		// Check if end condition has been reached
		if ( `progressWindow -query -progress` > 100 ) break;

		progressWindow -edit -progress $amount -status ("Completed: "+$amount+"%");
	}
	
	progressWindow -endProgress;
	
	for($an in $node)
	{
		setAttr ($an + ".saveMap") 0;
	}
}

global proc int set_hairCacheDataPath(string $path, string $type)
{
	textFieldButtonGrp -e -text $path savezhairCachePathGrp;
	return true;
}

global proc int set_hairCacheDataPathLoad()
{
	string $proj = `workspace -q -rd`;
	string $path = `fileDialog -dm ($proj+"*.hair")`;
	textFieldButtonGrp -e -text $path loadzhairCachePathGrp;
	return true;
}

global proc zhair_open_setcreateguideroptwin()
{
	//If such a window already exists, destory it.
 if ( (`window -exists setguideroptWin`) == true ) deleteUI setguideroptWin;
 
//Create the window.
 window -title "Create ZHair Guider Options" -wh 400 300  -mb false setguideroptWin;

columnLayout -adjustableColumn true;

//column begin
	intFieldGrp -l "Number of Segment" -v1 5 -cc "menuItem -e -l `intFieldGrp -q -v1 zhair_guider_ns_grp` zhair_guideroption_ns" zhair_guider_ns_grp;
	floatFieldGrp -l "Segment Length" -v1 1.0 -cc "menuItem -e -l `floatFieldGrp -q -v1 zhair_guider_sl_grp` zhair_guideroption_sl" zhair_guider_sl_grp;
	intFieldGrp -l "Number of Strand" -v1 3 -cc "menuItem -e -l `intFieldGrp -q -v1 zhair_guider_nstr_grp` zhair_guideroption_strandCount" zhair_guider_nstr_grp;
	floatFieldGrp -l "Strand Distace" -v1 1.0 -cc "menuItem -e -l `floatFieldGrp -q -v1 zhair_guider_sd_grp` zhair_guideroption_strandDist" zhair_guider_sd_grp;
	button -l "Done" -c "deleteUI setguideroptWin";
showWindow setguideroptWin;
}

global proc doloadzhair()
{
	string $dummy = `createNode -n "dummy" transform`;
	string $path = `textFieldGrp -q -text loadzhairCachePathGrp`;
	string $node = `createNode ZHairCache`;
	setAttr -type "string" ($node + ".cachePath") $path;
	connectAttr -f "time1.outTime" ($node + ".currentTime");
	connectAttr -f ($node + ".output") ($dummy+".translateX");
}

global proc openLoadHairMapWin()
{
//If such a window already exists, destory it.
 if ( (`window -exists loadzhairWin`) == true ) deleteUI loadzhairWin;
 
//Create the window.
 window -title "Load Hair Map Options" -wh 400 300  -mb false loadzhairWin;

//Layout
string $form = `formLayout -numberOfDivisions 100`;
string $row = `rowLayout -numberOfColumns 3 -columnWidth3 120 120 120 -columnAttach 1 "both" 0 -columnAttach 2 "both" 0 -columnAttach 3 "both" 0`;
string $scroll = `scrollLayout -p $form`;

columnLayout -adjustableColumn true;

//column begin
	textFieldButtonGrp
     -cw 1 110 -label "Cache Path" -buttonLabel "Pick"
	 -bc "set_hairCacheDataPathLoad"
     loadzhairCachePathGrp;
    
//row begin
button -l "Save" -c "doloadzhair;deleteUI loadzhairWin"-p $row;
button -l "Apply" -c "doloadzhair" -p $row;
button -l "Close" -c "deleteUI loadzhairWin" -p $row;

formLayout -edit
        -attachNone  $row     "top"
        -attachForm     $row     "left"   2
        -attachForm    $row     "bottom" 2
        -attachForm     $row     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $row
        -attachForm     $scroll "right"  2
    $form;

showWindow loadzhairWin;
}

global proc zhair_modify()
{
	string $sel[] = `ls -sl`;
	string $viz[] = `pickWalk -d down`;
	string $an;
	for($an in $viz)
	{
		if(`nodeType $an` == "ZHairCache")
		{
			float $rgb[]  = `colorSliderGrp -q -rgb zhairrootcolgrp`;
			setAttr ($an +".rootColorR") $rgb[0];
			setAttr ($an +".rootColorG") $rgb[1];
			setAttr ($an +".rootColorB") $rgb[2];
			
			$rgb  = `colorSliderGrp -q -rgb zhairtipcolgrp`;
			setAttr ($an +".tipColorR") $rgb[0];
			setAttr ($an +".tipColorG") $rgb[1];
			setAttr ($an +".tipColorB") $rgb[2];
			
			$rgb  = `colorSliderGrp -q -rgb zhairmutantcolgrp`;
			setAttr ($an +".mutantColorR") $rgb[0];
			setAttr ($an +".mutantColorG") $rgb[1];
			setAttr ($an +".mutantColorB") $rgb[2];
			
			float $val = `floatSliderGrp -q -v zhairmutantscalegrp`;
			setAttr ($an +".mutantColorScale") $val;
		}
	}
}

global proc open_zhair_modifywin()
{
	string $sel[] = `ls -sl`;
	string $viz[] = `pickWalk -d down`;
	string $an;
	string $node;
	for($an in $viz)
	{
		if(`nodeType $an` == "ZHairCache") $node = $an;
	}
	
	//If such a window already exists, destory it.
 if ( (`window -exists editzhairWin`) == true ) deleteUI editzhairWin;
 
//Create the window.
 window -title "Edit Hair" -wh 400 300  -mb false editzhairWin;

//Layout
string $form = `formLayout -numberOfDivisions 100`;
string $row = `rowLayout -numberOfColumns 3 -columnWidth3 120 120 120 -columnAttach 1 "both" 0 -columnAttach 2 "both" 0 -columnAttach 3 "both" 0`;
string $scroll = `scrollLayout -p $form`;

columnLayout -adjustableColumn true;

//column begin
	colorSliderGrp -cw 1 110 -label "Root Color" -rgb `getAttr ($node +".rootColorR")` `getAttr ($node +".rootColorG")` `getAttr ($node +".rootColorB")` -cc "zhair_modify" zhairrootcolgrp;
	colorSliderGrp -cw 1 110 -label "Tip Color" -rgb `getAttr ($node +".tipColorR")` `getAttr ($node +".tipColorG")` `getAttr ($node +".tipColorB")` -cc "zhair_modify" zhairtipcolgrp;
	colorSliderGrp -cw 1 110 -label "Mutant Color" -rgb `getAttr ($node +".mutantColorR")` `getAttr ($node +".mutantColorG")` `getAttr ($node +".mutantColorB")` -cc "zhair_modify" zhairmutantcolgrp;
	floatSliderGrp -cw 1 110 -label "Mutant Scale" -field true -minValue 0.0 -maxValue 1.0 -value `getAttr ($node +".mutantColorScale")` -cc "zhair_modify" zhairmutantscalegrp;
  
//row begin
//button -l "Save" -c "doloadzhair;deleteUI editzhairWin"-p $row;
//button -l "Apply" -c "doloadzhair" -p $row;
text -l ""; text -l "";
button -l "Close" -c "deleteUI editzhairWin" -p $row;

formLayout -edit
        -attachNone  $row     "top"
        -attachForm     $row     "left"   2
        -attachForm    $row     "bottom" 2
        -attachForm     $row     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $row
        -attachForm     $scroll "right"  2
    $form;

showWindow editzhairWin;
}

global proc zhair_comb()
{
	string $t = `combCurveToolContext`;
	setToolTo $t;
}

global proc zhair_mod_dyn()
{
//If such a window already exists, destory it.
 if ( (`window -exists zhairmodnclothWin`) == true ) deleteUI zhairmodnclothWin;
 
//Create the window.
 window -title "Modify Hair Dynamic" -wh 400 300  -mb false zhairmodnclothWin;

//Layout
string $form = `formLayout -numberOfDivisions 100`;
string $row = `rowLayout -numberOfColumns 3 -columnWidth3 120 120 120 -columnAttach 1 "both" 0 -columnAttach 2 "both" 0 -columnAttach 3 "both" 0`;
string $scroll = `scrollLayout -p $form`;

columnLayout -adjustableColumn true;
 rowColumnLayout -numberOfColumns 3
        -columnWidth 1 150
		-columnWidth 2 150
		-columnWidth 3 150;
       
		frameLayout -label "Solvers" -labelAlign "center" -borderStyle "out" -height 120;
			string $scrollLayout = `scrollLayout
        -horizontalScrollBarThickness 16
        -verticalScrollBarThickness   16 -height 120`;
				rowColumnLayout -numberOfColumns 2  -columnWidth 1 20 -columnWidth 2 120;
					string $nucs[] = `ls -type nucleus`;
					string $an;
					for($an in $nucs) {
						checkBox -v `getAttr ($an+".enable")` -cc ("zhair_toggleattr " + $an+".enable");
						button -l $an -c ("zhair_parse_nuc " + $an);
					}
                    setParent ..;
                setParent ..;
			setParent ..;
			
            frameLayout -label "Actives" -labelAlign "center" -borderStyle "out" -height 120;
			scrollLayout -horizontalScrollBarThickness 16 -verticalScrollBarThickness 16 -height 120;
                rowColumnLayout -numberOfColumns 2  -columnWidth 1 20 -columnWidth 2 120 zhair_colm_active;    
                    setParent ..;
                setParent ..;
			setParent ..;
			
            frameLayout -label "Passives" -labelAlign "center" -borderStyle "out" -height 120;
			scrollLayout -horizontalScrollBarThickness 16 -verticalScrollBarThickness 16 -height 120;
                rowColumnLayout -numberOfColumns 2  -columnWidth 1 20 -columnWidth 2 120 zhair_colm_passive;
                    
                    setParent ..;
                setParent ..;
			setParent ..;  

setParent..;
 
		frameLayout -l "" -labelAlign "center" -borderStyle "out" zhair_frm_dynattr;
                
                setParent ..;
setParent..;


setParent..;

//row begin
//button -l "Save" -c "doloadzhair;deleteUI zhairmodnclothWin"-p $row;
button -l "Reload" -c "zhair_mod_dyn" -p $row;
text -l "";
button -l "Close" -c "deleteUI zhairmodnclothWin" -p $row;

formLayout -edit
        -attachNone  $row     "top"
        -attachForm     $row     "left"   2
        -attachForm    $row     "bottom" 2
        -attachForm     $row     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $row
        -attachForm     $scroll "right"  2
    $form;

showWindow zhairmodnclothWin;
}

global proc zhair_parse_nuc(string $solver)
{
	string $node[] =`rowColumnLayout -q -childArray zhair_colm_active`;
	string $an;
	for($an in $node) {
		deleteUI $an;
	}
	
	$node =`rowColumnLayout -q -childArray zhair_colm_passive`;
	for($an in $node) {
		deleteUI $an;
	}
	
	$node =`listConnections -d off -s on -sh on ($solver+".inputActive")`;
	for($an in $node) {
		checkBox -p zhair_colm_active -v `getAttr ($an+".isDynamic")` -cc ("zhair_toggleattr " + $an+".isDynamic");
		button -l $an -p zhair_colm_active -c ("zhair_parse_nucactive "+$an);
	}
	
	$node =`listConnections -d off -s on -sh on ($solver+".inputPassive")`;
	for($an in $node) {
		checkBox -p zhair_colm_passive -v `getAttr ($an+".collide")` -cc ("zhair_toggleattr " + $an+".collide");
		button -l $an -p zhair_colm_passive -c ("zhair_parse_nucpassive "+$an);
	}
	
	$node =`frameLayout -q -childArray zhair_frm_dynattr`;
	for($an in $node) {
		deleteUI $an;
	}
	
	columnLayout -p zhair_frm_dynattr;
	attrControlGrp -attribute ($solver+".startFrame");
	attrControlGrp -attribute ($solver+".gravity");
	attrControlGrp -attribute ($solver+".airDensity");
	attrControlGrp -attribute ($solver+".windSpeed");
	attrFieldSliderGrp -columnWidth 1 120 -min -1.0 -max 1.0 -at ($solver+".windDirectionX");
	attrFieldSliderGrp -columnWidth 1 120 -min -1.0 -max 1.0 -at ($solver+".windDirectionY");
	attrFieldSliderGrp -columnWidth 1 120 -min -1.0 -max 1.0 -at ($solver+".windDirectionZ");
	attrFieldSliderGrp -columnWidth 1 120 -min 0.0 -max 1.0 -at ($solver+".windNoise");
	attrControlGrp -attribute ($solver+".subSteps");
	attrControlGrp -attribute ($solver+".maxCollisionIterations");
	button -l "Set Typical" -c ("zhair_set_solver "+$solver);
	setParent ..;
	
	frameLayout -e -l $solver zhair_frm_dynattr;
}

global proc zhair_parse_nucactive(string $solver)
{
	string $node[] =`frameLayout -q -childArray zhair_frm_dynattr`;
	string $an;
	for($an in $node) {
		deleteUI $an;
	}
	
	columnLayout -p zhair_frm_dynattr;
	button -l "Hide/Show" -c ("zhair_tglactivedsy "+$solver);
	attrControlGrp -attribute ($solver+".collide");
	attrControlGrp -attribute ($solver+".selfCollide");
	attrControlGrp -attribute ($solver+".pointMass");
	attrControlGrp -attribute ($solver+".lift");
	attrControlGrp -attribute ($solver+".stretchResistance");
	attrControlGrp -attribute ($solver+".bendResistance");
	attrControlGrp -attribute ($solver+".shearResistance");
	attrControlGrp -attribute ($solver+".damp");
	attrControlGrp -attribute ($solver+".inputMeshAttract");
	attrControlGrp -attribute ($solver+".inputAttractDamp");

	zhair_setup_rgdmap ($solver+".inputAttractMap");
	button -l "Edit Attract Map" -c ("zhair_ae_rgdmap " + $solver+".inputAttractMap");
	
	attrControlGrp -attribute ($solver+".trappedCheck");
	attrControlGrp -attribute ($solver+".maxIterations");
	
	button -l "Set Typical" -c ("zhair_set_active "+$solver);
	setParent ..;
	
	frameLayout -e -l $solver zhair_frm_dynattr;
}

global proc zhair_parse_nucpassive(string $solver)
{
	string $node[] =`frameLayout -q -childArray zhair_frm_dynattr`;
	string $an;
	for($an in $node) {
		deleteUI $an;
	}
	
	columnLayout -p zhair_frm_dynattr;
	attrControlGrp -attribute ($solver+".bounce") 0;
	attrControlGrp -attribute ($solver+".friction") 1;
	attrControlGrp -attribute ($solver+".trappedCheck");
	
	setParent ..;
	
	frameLayout -e -l $solver zhair_frm_dynattr;
}

global proc zhair_toggleattr(string $attr)
{
	if(`getAttr $attr`) setAttr $attr 0;
	else setAttr $attr 1;
}

global proc zhair_setup_rgdmap (string $attr)
{
	optionMenuGrp -label "Attract Map" -columnWidth 2 160 -cc ("zh_mod_rdgmap "+$attr) zh_rdgmapopt;
	menuItem -label "none";
	menuItem -label "attach new";
	string $ramps[] = `ls -type ramp`;
	if(size($ramps) < 1) {
		
	}
	else {
		string $an;
		for($an in $ramps) {
			menuItem -label $an;
		}
	}
	
	string $conn[] = `listConnections $attr`;
	if(size($conn)<1) optionMenuGrp -e -select 1 zh_rdgmapopt;
	else {
		int $i;
		for($i=0; $i<size($ramps); $i++) {
			if($ramps[$i] == $conn[0]) optionMenuGrp -e -select (3+$i) zh_rdgmapopt;
		}
	}
}

global proc zh_mod_rdgmap(string $attr)
{
	int $hdl = `optionMenuGrp -q -select zh_rdgmapopt`;
	if($hdl == 1) {
		string $conn[] = `listConnections -p 1 $attr`;
		if(size($conn)>0) disconnectAttr $conn[0] $attr;
	}
	else if($hdl==2) {
		string $tx = `shadingNode -asTexture ramp`;
		string $pl = `shadingNode -asUtility place2dTexture`;
		connectAttr ($pl+".outUV") ($tx+".uv");
		connectAttr ($pl+".outUvFilterSize") ($tx+".uvFilterSize");
		removeMultiInstance -break true ($tx+".colorEntryList[2]");
		setAttr ($tx+".colorEntryList[0].position") 0.15;
		setAttr ($tx+".colorEntryList[0].color") -type double3 1 1 1 ;
		setAttr ($tx+".colorEntryList[1].position") 0.5;
		setAttr ($tx+".colorEntryList[1].color") -type double3 0 0 0 ;

		connectAttr -force ($tx+".outAlpha") $attr;
		
		string $buffer[];
		$numTokens = `tokenize $attr "." $buffer`;
		zhair_parse_nucactive($buffer[0]);
	}
	else {
		string $ramps[] = `ls -type ramp`;
		connectAttr -force ($ramps[$hdl-3]+".outAlpha") $attr;
	}
}

global proc zhair_ae_rgdmap(string $attr)
{
	string $conn[] = `listConnections $attr`;
	if(size($conn)>0) {
		select -r $conn[0];
		print($conn[0]);
		AttributeEditor;
	}
}

global proc zhair_tglactivedsy(string $node)
{
	if(`getAttr ($node+".solverDisplay")` == 0) setAttr ($node+".solverDisplay") 1;
	else setAttr ($node+".solverDisplay") 0;
}

global proc zhair_attach_deformer_win()
{
//If such a window already exists, destory it.
if ( (`window -exists deformzhairWin`) == true ) deleteUI deformzhairWin;
 
//Create the window.
 window -title "Hair Deformer Options" -wh 400 300  -mb false deformzhairWin;

//Layout
string $form = `formLayout -numberOfDivisions 100`;
string $row = `rowLayout -numberOfColumns 3 -columnWidth3 120 120 120 -columnAttach 1 "both" 0 -columnAttach 2 "both" 0 -columnAttach 3 "both" 0`;
string $scroll = `scrollLayout -p $form`;

columnLayout -adjustableColumn true;

//column begin
	intFieldGrp -l "Number of Segment" -v1 5 zhair_def_guider_ns_grp;
	intFieldGrp -l "Start Frame" -v1 1 zhair_def_guider_sf_grp;
	    
//row begin
button -l "Create" -c "dodeformzhair; deleteUI deformzhairWin"-p $row;
button -l "Apply" -c "dodeformzhair" -p $row;
button -l "Close" -c "deleteUI deformzhairWin" -p $row;

formLayout -edit
        -attachNone  $row     "top"
        -attachForm     $row     "left"   2
        -attachForm    $row     "bottom" 2
        -attachForm     $row     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $row
        -attachForm     $scroll "right"  2
    $form;

showWindow deformzhairWin;
}

global proc dodeformzhair()
{
	string $sel[] = `ls -sl`;
	if(size($sel) < 2) {
		print("Select hair patch(s) and body mesh to add deformer.");
		return;
	}
	int $i;
	int $last = size($sel)-1;
	for($i=0; $i<$last; $i++) {
		select -r $sel[$i];
		string $node[] = `deformer -type hairDeformer`;
		setAttr ($node[0] + ".numSegment") `intFieldGrp -q -v1 zhair_def_guider_ns_grp`;
		setAttr ($node[0] + ".startFrame") `intFieldGrp -q -v1 zhair_def_guider_sf_grp`;
		connectAttr -f time1.outTime ($node[0] + ".currentTime");
		connectAttr -f ($sel[$last] +".outMesh") ($node[0] + ".growMesh");
	}
}

global proc zhair_set_solver(string $solver)
{
	setAttr ($solver+".gravity") 639;
	setAttr ($solver+".airDensity") 0.01;
}

global proc zhair_set_active(string $solver)
{
	setAttr ($solver+".collide") 1;
	setAttr ($solver+".selfCollide") 0;
	setAttr ($solver+".pointMass") 0.2;
	setAttr ($solver+".lift") 0.01;
	setAttr ($solver+".stretchResistance") 200;
	setAttr ($solver+".bendResistance") 1.5;
	setAttr ($solver+".shearResistance") 1.5;
	setAttr ($solver+".damp") 0.07;
	setAttr ($solver+".inputMeshAttract") 1.0;
	setAttr ($solver+".inputAttractDamp") 0.5;
	setAttr ($solver+".trappedCheck") 1;
}