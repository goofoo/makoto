global proc zhairRemoveMenus()
{
    global string $gMainWindow;
    if ($gMainWindow != "") {
        global string $gRenderingMenus[];
        int $menuIndex = -1;
        int $menuSize = `size $gRenderingMenus`;
        setParent $gMainWindow;

        // iterate through the Rendering menu to find the zhair menu.
        for ($i = 0; $i < $menuSize; $i++) {
            string $m = `match "zTools" $gRenderingMenus[$i]`;
            if ( $m != "" ) {
                $menuIndex = $i;
                break;
            }
        }
       
        // if not found, create it.
        if ($menuIndex == -1) {
            $gRenderingMenus[$menuSize] = `menu -l "*zTools" -aob true -to true zTools`;
        }
       
        // if zhair menu exists, delete it first.
        else {
            if(`menuItem -exists zhairItems` ) deleteUI zhairItems;
        }
    }
}

global proc zhairCreateMenus()
{
    global string $gMainWindow;
    if ($gMainWindow != "") {
        global string $gRenderingMenus[];
        int $menuIndex = -1;
        int $menuSize = `size $gRenderingMenus`;
        setParent $gMainWindow;

        // iterate through the Rendering menu to find the zhair menu.
        for ($i = 0; $i < $menuSize; $i++) {
            string $m = `match "zTools" $gRenderingMenus[$i]`;
            if ( $m != "" ) {
                $menuIndex = $i;
                break;
            }
        }
       
        // if not found, create it.
        if ($menuIndex == -1) {
            $gRenderingMenus[$menuSize] = `menu -l "*zTools" -aob true -to true zTools`;
        }
       
        // if zhair menu exists, seach the menu item.
        else {
            if(`menuItem -exists zhairItems` ) deleteUI zhairItems;
        }
       
        // append menu items
        menuItem -p zTools -l "Z Hair" -subMenu true zhairItems;
			menuItem -l "Create Guider";
            menuItem -l "Create Hair" -c "zhair_attach";
            menuItem -l "Save Cache" -c "openSaveHairMapWin";
			menuItem -l "Load Cache" -c "openSaveHairMapWin";
            menuItem -divider true;
			menuItem -l "Existing Hairs" -subMenu true -postMenuCommand zhair_findexisting zhair_existinghairs;
			setParent -menu ..;
		setParent -menu ..;
    }
}

global proc zhair_attach()
{
	string $sel[] = `ls -sl`;
	if(size($sel) < 2) 
	{
		print("Select 2 or more poly meshes to create z hair!");
		return;
	}
	
	string $map =`createNode ZHairViz`;
	
	int $numsel = size($sel);
	int $i;
	for($i=0; $i<$numsel-1; $i++)
	{
		select -r $sel[$i];
		string $mesh[] = `pickWalk -d down`;
		connectAttr -f ($mesh[0]+".outMesh") ($map+".guideMesh["+$i+"]");
	}
	
	select -r $sel[$numsel-1];
	$mesh = `pickWalk -d down`;
	connectAttr -f ($mesh[0]+".outMesh") ($map+".growMesh");
	
	string $dummy = `createNode -n "dummy" transform`;
	connectAttr -f ($map + ".outval") ($dummy+".translateX");
	
	connectAttr -f "time1.outTime" ($map + ".currentTime");
	
	setAttr ($map + ".startFrame") `playbackOptions -q -min`;
	
	 zhair_findexisting();
}

global proc zhair_findexisting()
{
	string $existing[] = `ls -type ZHairViz`;
	string $an;
	for($an in $existing) 
	{
		string $mnu = $an+"_mnu";
		if(`menuItem -exists $mnu` ) deleteUI $mnu;
		menuItem -l $an -c ("select -tgl "+$an) -p zhair_existinghairs $mnu;
	}
}

global proc openSaveHairMapWin()
{

//If such a window already exists, destory it.
 if ( (`window -exists savezhairWin`) == true ) deleteUI savezhairWin;
 
//Create the window.
 window -title "Save Bruise Map Options" -wh 400 300  -mb false savezhairWin;

//Layout
string $form = `formLayout -numberOfDivisions 100`;
string $row = `rowLayout -numberOfColumns 3 -columnWidth3 120 120 120 -columnAttach 1 "both" 0 -columnAttach 2 "both" 0 -columnAttach 3 "both" 0`;
string $scroll = `scrollLayout -p $form`;

columnLayout -adjustableColumn true;

//column begin
	textFieldButtonGrp
     -cw 1 110 -label "Cache Path" -buttonLabel "Pick"
	 -bc "fileBrowser \"set_hairCacheDataPath\" \"Set Path\" \"\" 4"
     savezhairCachePathGrp;
    
	text -al left -l "\nDescription: save cache on any hair node from playback start to end.\nWill save to /data of current project is path is not set.";

//row begin
button -l "Save" -c "doSavezhair;deleteUI savezhairWin"-p $row;
button -l "Apply" -c "doSavezhair" -p $row;
button -l "Close" -c "deleteUI savezhairWin" -p $row;

formLayout -edit
        -attachNone  $row     "top"
        -attachForm     $row     "left"   2
        -attachForm    $row     "bottom" 2
        -attachForm     $row     "right"  2

        -attachForm     $scroll "top"    2
        -attachForm    $scroll "left"   2
        -attachControl    $scroll "bottom" 2 $row
        -attachForm     $scroll "right"  2
    $form;

showWindow savezhairWin;
}

global proc doSavezhair()
{
	string $node[] = `ls -type ZHairViz`;
	string $an;
	for($an in $node)
	{
		setAttr -type "string" ($an + ".cachePath") `textFieldButtonGrp -q -text savezhairCachePathGrp`;
		setAttr ($an + ".saveMap") 1;
	}

	int $amount = 0;
	progressWindow -title "Writing Hair" -progress $amount -status "Completed: 0%" -isInterruptable true;

	int $s = `playbackOptions -q -min`;
	int $e = `playbackOptions -q -max`;
	int $step = 1;

	int $i;
	for( $i = $s; $i <= $e; $i++ ) 
	{
		currentTime $i;
		$amount = ($i+1-$s)/(1.0*($e+1-$s))*100;

		// Check if the dialog has been cancelled
		if ( `progressWindow -query -isCancelled` ) break; 
		// Check if end condition has been reached
		if ( `progressWindow -query -progress` > 100 ) break;

		progressWindow -edit -progress $amount -status ("Completed: "+$amount+"%");
	}
	
	progressWindow -endProgress;
	
	for($an in $node)
	{
		setAttr ($an + ".saveMap") 0;
	}
}

global proc int set_hairCacheDataPath(string $path, string $type)
{
	textFieldButtonGrp -e -text $path savezhairCachePathGrp;
	return true;
}